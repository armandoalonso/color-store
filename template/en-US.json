{
  "languageTag": "en-US",
  "fileDescription": "Strings for piranha305_colorstore.",
  "text": {
    "plugins": {
      "piranha305_colorstore": {
        "name": "Color Store",
        "description": "A plugin that allows you manage database of colors. easily convert between different color formats and use existing color palettes.",
        "help-url": "https://www.construct.net/en/make-games/addons/1372/colorstore/documentation",
        "aceCategories": {
          "general": "General",
          "loading": "Loading",
          "conversion": "Conversion"
        },
        "properties": {},
        "actions": {
          "SetColorHex": {
            "list-name": "Set color (hex)",
            "display-text": "Set color [i]{0}[/i] to [i]{1}[/i]",
            "description": "Sets the color",
            "params": {
              "tag": {
                "name": "Tag",
                "desc": "The tag that will be used to reference the color"
              },
              "color": {
                "name": "Color",
                "desc": "The color value (hex) you want to set"
              }
            }
          },
          "SetColorHSL": {
            "list-name": "Set color (hsl)",
            "display-text": "Set color [i]{0}[/i] to hsla([i]{1}[/i], [i]{2}[/i], [i]{3}[/i], [i]{4}[/i])",
            "description": "Sets the color",
            "params": {
              "tag": {
                "name": "Tag",
                "desc": "The tag that will be used to reference the color"
              },
              "h": {
                "name": "Hue",
                "desc": "The hue value (0-360) you want to set"
              },
              "s": {
                "name": "Saturation",
                "desc": "The saturation value (0-100) you want to set"
              },
              "l": {
                "name": "Lightness",
                "desc": "The lightness value (0-100) you want to set"
              },
              "a": {
                "name": "Alpha",
                "desc": "The alpha value (0-255) you want to set"
              }
            }
          },
          "SetColorPacked": {
            "list-name": "Set color (packed)",
            "display-text": "Set color [i]{0}[/i] to [i]{1}[/i]",
            "description": "Sets the color",
            "params": {
              "tag": {
                "name": "Tag",
                "desc": "The tag that will be used to reference the color"
              },
              "color": {
                "name": "Color",
                "desc": "The color value (0-100) you want to set"
              }
            }
          },
          "SetColorRGB": {
            "list-name": "Set color (rgb)",
            "display-text": "Set color [i]{0}[/i] to rgba255([i]{1}[/i], [i]{2}[/i], [i]{3}[/i], [i]{4}[/i])",
            "description": "Sets the color",
            "params": {
              "tag": {
                "name": "Tag",
                "desc": "The tag that will be used to reference the color"
              },
              "r": {
                "name": "Red",
                "desc": "The red value (0-255) you want to set"
              },
              "g": {
                "name": "Green",
                "desc": "The green value (0-255) you want to set"
              },
              "b": {
                "name": "Blue",
                "desc": "The blue value (0-255) you want to set"
              },
              "a": {
                "name": "Alpha",
                "desc": "The alpha value (0-255) you want to set"
              }
            }
          },
          "SetColorRGBNormal": {
            "list-name": "Set color (rgb normalized)",
            "display-text": "Set color [i]{0}[/i] to rgba([i]{1}[/i], [i]{2}[/i], [i]{3}[/i], [i]{4}[/i])",
            "description": "Sets the color",
            "params": {
              "tag": {
                "name": "Tag",
                "desc": "The tag that will be used to reference the color"
              },
              "r": {
                "name": "Red",
                "desc": "The red value (0-1) you want to set"
              },
              "g": {
                "name": "Green",
                "desc": "The green value (0-1) you want to set"
              },
              "b": {
                "name": "Blue",
                "desc": "The blue value (0-1) you want to set"
              },
              "a": {
                "name": "Alpha",
                "desc": "The alpha value (0-1) you want to set"
              }
            }
          },
          "ClearColors": {
            "list-name": "Clear color store",
            "display-text": "Clear color store",
            "description": "Clears the color store",
            "params": {}
          },
          "LoadColorsFromHexCodes": {
            "list-name": "Load colors from hex codes",
            "display-text": "Load colors from hex codes [i]{0}[/i]",
            "description": "Loads colors from hex codes",
            "params": {
              "hexCodes": {
                "name": "Hex Codes",
                "desc": "A comma-separated list of hex codes"
              }
            }
          },
          "LoadPalette": {
            "list-name": "Load palette",
            "display-text": "Load palette [i]{0}[/i]",
            "description": "Loads a palette",
            "params": {
              "palette": {
                "name": "Palette",
                "desc": "The palette you want to load",
                "items": {
                  "31.hex": "31",
                  "aap-64.hex": "aap-64",
                  "apollo.hex": "apollo",
                  "barren-equinox.hex": "barren-equinox",
                  "beach-day-15.hex": "beach-day-15",
                  "blk-neo.hex": "blk-neo",
                  "cc-29.hex": "cc-29",
                  "cereal-years.hex": "cereal-years",
                  "chalking-fluently.hex": "chalking-fluently",
                  "chaotic-neutral.hex": "chaotic-neutral",
                  "chasm.hex": "chasm",
                  "claude-monet-12.hex": "claude-monet-12",
                  "cmyk-douce.hex": "cmyk-douce",
                  "dawnbringer-32.hex": "dawnbringer-32",
                  "endesga-64.hex": "endesga-64",
                  "fallen31.hex": "fallen31",
                  "famicube.hex": "famicube",
                  "fantasy-24.hex": "fantasy-24",
                  "flat-color-updated.hex": "flat-color-updated",
                  "fleja-master-palette.hex": "fleja-master-palette",
                  "foggy-nature.hex": "foggy-nature",
                  "galeth-100.hex": "galeth-100",
                  "hofner-dawn.hex": "hofner-dawn",
                  "jehkoba64.hex": "jehkoba64",
                  "journey.hex": "journey",
                  "juicyfruit-16.hex": "juicyfruit-16",
                  "lospec500.hex": "lospec500",
                  "lux2k.hex": "lux2k",
                  "marmuuu.hex": "marmuuu",
                  "matt36.hex": "matt36",
                  "mulfok32.hex": "mulfok32",
                  "na16.hex": "na16",
                  "neon-space.hex": "neon-space",
                  "nintendo-entertainment-system.hex": "nintendo-entertainment-system",
                  "paletaoscuradegoya.hex": "paletaoscuradegoya",
                  "paper-garden.hex": "paper-garden",
                  "pear36.hex": "pear36",
                  "petrichor.hex": "petrichor",
                  "pico-8.hex": "pico-8",
                  "pineapple-32.hex": "pineapple-32",
                  "pumpkin-patch-13.hex": "pumpkin-patch-13",
                  "qameboy.hex": "qameboy",
                  "rakichrome-58.hex": "rakichrome-58",
                  "redorb12.hex": "redorb12",
                  "resurrect-64.hex": "resurrect-64",
                  "retrocal-8.hex": "retrocal-8",
                  "rewild-64.hex": "rewild-64",
                  "rgbg-36.hex": "rgbg-36",
                  "rosy-42.hex": "rosy-42",
                  "sage57.hex": "sage57",
                  "samey-12.hex": "samey-12",
                  "sara-98c.hex": "sara-98c",
                  "sorbet-special.hex": "sorbet-special",
                  "spectral-16.hex": "spectral-16",
                  "spica-72.hex": "spica-72",
                  "sweet-and-sour-20.hex": "sweet-and-sour-20",
                  "sweetie-16.hex": "sweetie-16",
                  "twilioquest-76.hex": "twilioquest-76",
                  "undernight-20.hex": "undernight-20",
                  "vinik24.hex": "vinik24",
                  "waft.hex": "waft",
                  "zughy-32.hex": "zughy-32"
                }
              }
            }
          },
          "LoadPaletteFromFile": {
            "list-name": "Load palette from file",
            "display-text": "Load palette from file [i]{0}[/i]",
            "description": "Loads a palette from a file",
            "params": {
              "fileName": {
                "name": "File Name",
                "desc": "The name of the file you want to load from project files (ends in .hex), you can find palettes in https://lospec.com"
              }
            }
          }
        },
        "conditions": {},
        "expressions": {
          "HexToPacked": {
            "translated-name": "HexToPacked",
            "description": "Converts Hex to Packed Color",
            "params": {
              "hex": {
                "name": "Hex",
                "desc": "The hex value"
              }
            }
          },
          "HexToRGB": {
            "translated-name": "HexToRGB",
            "description": "Converts Hex to RGB String '(r,g,b,a)'",
            "params": {
              "hex": {
                "name": "Hex",
                "desc": "The hex value"
              }
            }
          },
          "RGBToHex": {
            "translated-name": "RGBToHex",
            "description": "Converts RGB to Hex",
            "params": {
              "r": {
                "name": "Red",
                "desc": "The red value (0-255)"
              },
              "g": {
                "name": "Green",
                "desc": "The green value (0-255)"
              },
              "b": {
                "name": "Blue",
                "desc": "The blue value (0-255)"
              },
              "a": {
                "name": "Alpha",
                "desc": "The alpha value (0-255)"
              }
            }
          },
          "Alpha": {
            "translated-name": "Alpha",
            "description": "Returns the color's alpha value",
            "params": {
              "tag": {
                "name": "Tag",
                "desc": "The tag that will be used to reference the color"
              }
            }
          },
          "Blue": {
            "translated-name": "Blue",
            "description": "Returns the color's blue value",
            "params": {
              "tag": {
                "name": "Tag",
                "desc": "The tag that will be used to reference the color"
              }
            }
          },
          "CurrentPalette": {
            "translated-name": "CurrentPalette",
            "description": "Returns the current palette",
            "params": {}
          },
          "GetColorJson": {
            "translated-name": "GetColorJson",
            "description": "Returns the color's value as JSON",
            "params": {
              "tag": {
                "name": "Tag",
                "desc": "The tag that will be used to reference the color"
              }
            }
          },
          "GetColorStoreJSON": {
            "translated-name": "GetColorStoreJSON",
            "description": "Returns the entire color store as JSON",
            "params": {}
          },
          "Green": {
            "translated-name": "Green",
            "description": "Returns the color's green value",
            "params": {
              "tag": {
                "name": "Tag",
                "desc": "The tag that will be used to reference the color"
              }
            }
          },
          "Hex": {
            "translated-name": "Hex",
            "description": "Returns the color as a hex string",
            "params": {
              "tag": {
                "name": "Tag",
                "desc": "The tag that will be used to reference the color"
              }
            }
          },
          "Hue": {
            "translated-name": "Hue",
            "description": "Returns the color's hue value",
            "params": {
              "tag": {
                "name": "Tag",
                "desc": "The tag that will be used to reference the color"
              }
            }
          },
          "Lightness": {
            "translated-name": "Lightness",
            "description": "Returns the color's lightness value",
            "params": {
              "tag": {
                "name": "Tag",
                "desc": "The tag that will be used to reference the color"
              }
            }
          },
          "NormalizedAlpha": {
            "translated-name": "NormalizedAlpha",
            "description": "Returns the color's alpha value (normalized)",
            "params": {
              "tag": {
                "name": "Tag",
                "desc": "The tag that will be used to reference the color"
              }
            }
          },
          "NormalizedBlue": {
            "translated-name": "NormalizedBlue",
            "description": "Returns the color's blue value (normalized)",
            "params": {
              "tag": {
                "name": "Tag",
                "desc": "The tag that will be used to reference the color"
              }
            }
          },
          "NormalizedGreen": {
            "translated-name": "NormalizedGreen",
            "description": "Returns the color's green value (normalized)",
            "params": {
              "tag": {
                "name": "Tag",
                "desc": "The tag that will be used to reference the color"
              }
            }
          },
          "NormalizedREd": {
            "translated-name": "NormalizedREd",
            "description": "Returns the color's red value (normalized)",
            "params": {
              "tag": {
                "name": "Tag",
                "desc": "The tag that will be used to reference the color"
              }
            }
          },
          "Packed": {
            "translated-name": "Packed",
            "description": "Returns the color as a packed number",
            "params": {
              "tag": {
                "name": "Tag",
                "desc": "The tag that will be used to reference the color"
              }
            }
          },
          "RandomColor": {
            "translated-name": "RandomColor",
            "description": "Returns a random color tag the color store",
            "params": {}
          },
          "Red": {
            "translated-name": "Red",
            "description": "Returns the color's red value",
            "params": {
              "tag": {
                "name": "Tag",
                "desc": "The tag that will be used to reference the color"
              }
            }
          },
          "Saturation": {
            "translated-name": "Saturation",
            "description": "Returns the color's saturation value",
            "params": {
              "tag": {
                "name": "Tag",
                "desc": "The tag that will be used to reference the color"
              }
            }
          }
        }
      }
    }
  }
}